{"version":3,"sources":["webpack:///src/app/boards/boards.component.ts","webpack:///src/app/boards/boards.component.html","webpack:///src/app/ratings/ratings.component.html","webpack:///src/app/ratings/ratings.component.ts","webpack:///src/app/hero-search/hero-search.component.ts","webpack:///src/app/hero-search/hero-search.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/in-memory-data.service.ts","webpack:///src/app/message.service.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/hero-detail/hero-detail.component.html","webpack:///src/app/hero-detail/hero-detail.component.ts","webpack:///src/app/hero.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/rating.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["BoardsComponent","inmemorydataService","ratingService","myRatings","getRatings","subscribe","rating","ImagePath","RatingsComponent","ratings","value","addRating","push","string","flag","i","length","charCodeAt","parseInt","add","convertToNumber","HeroSearchComponent","heroService","searchTerms","term","next","heroes$","pipe","searchHeroes","search","environment","production","messageService","MessagesComponent","InMemoryDataService","heroes","id","name","Math","max","map","hero","MessageService","messages","message","DashboardComponent","getHeroes","slice","HeroesComponent","trim","addHero","filter","h","deleteHero","AppComponent","title","AppModule","forRoot","dataEncapsulation","HeroDetailComponent","route","location","getHero","Number","snapshot","paramMap","get","back","updateHero","goBack","HeroService","http","heroesUrl","httpOptions","headers","_","log","handleError","url","outcome","x","post","newHero","put","operation","result","error","console","routes","path","redirectTo","pathMatch","component","AppRoutingModule","RatingService","ratingsUrl","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {InMemoryDataService} from '../in-memory-data.service';\r\nimport { RatingService } from '../rating.service';\r\nimport {Rating} from '../rating';\r\n\r\n@Component({\r\n  selector: 'app-boards',\r\n  templateUrl: './boards.component.html',\r\n  styleUrls: ['./boards.component.css']\r\n})\r\nexport class BoardsComponent implements OnInit {\r\n\r\n   ImagePath: string;\r\n\r\nmyRatings: Rating[] = [];\r\n  \r\n  constructor(inmemorydataService: InMemoryDataService, ratingService: RatingService) {\r\n    //image location\r\n\r\n\r\nratingService.getRatings().subscribe(rating => this.myRatings = rating);\r\n\r\nthis.ImagePath = '/assets/sample.png';\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--...header and body content-->\r\n\r\n<mat-card class=\"example-card\" >\r\n<mat-card-header class=\"example-header\"\r\n\t\t\t\tstyle=\"padding-left: 40%;\">\r\n<h2><span></span>GeeksforGeeks</h2 >\r\n</mat-card-header>\r\n<mat-card-content>\r\n    <img [src] =\"ImagePath\" \r\n          style=\"width: 600px;height: 400px;\">\r\n </mat-card-content>\r\n</mat-card>\r\n\r\n<!--... body and footer content-->\r\n\r\n","<h2>My Ratings</h2>\r\n<ul class=\"ratings\">\r\n  <li *ngFor=\"let rating of ratings\">\r\n    <span class=\"badge\">{{rating.value}}</span>\r\n  </li>\r\n</ul>\r\n\r\n\r\n<div>\r\n<!--  <label id=\"new-rating\">Rating value: </label>-->\r\n  <input type=\"number\" #rating />\r\n\r\n  <!-- (click) passes input value to add() and then clears the input -->\r\n  <button class=\"add-button\" (click) =\"add(convertToNumber(rating.value));rating.value=''\">\r\nAdd rating    \r\n  </button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Rating } from '../rating';\r\nimport { RATINGS } from '../mock-ratings';\r\nimport { RatingService } from '../rating.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ratings',\r\n  templateUrl: './ratings.component.html',\r\n  styleUrls: ['./ratings.component.css']\r\n})\r\nexport class RatingsComponent implements OnInit {\r\n\r\nratings: Rating[] = [];\r\n\r\nconstructor(private ratingService: RatingService) { }\r\n\r\n\r\ngetRatings(): void {\r\n  this.ratingService.getRatings()\r\n      .subscribe(ratings => this.ratings = ratings);\r\n}\r\n\r\n  ngOnInit(){\r\n  this.getRatings();\r\n \r\n }\r\n\r\n\r\nadd(value: number): void {\r\n  if (!value) { return; }\r\n  this.ratingService.addRating({ value } as Rating)\r\n    .subscribe(rating => {\r\n      this.ratings.push(rating);\r\n    });\r\n}\r\n\r\nconvertToNumber(string: string): number {\r\n\r\nvar flag = false;\r\n\r\n\r\n\tfor (var i = 0; i < string.length; i++) {\r\n            if (string.charCodeAt(i)<48 || string.charCodeAt(i)>57){\r\n\t\tflag = true;\r\n\t\t}\r\n\t}\r\n\r\n        if (flag == false){\r\n\treturn parseInt(string);\t\t\r\n\t}\r\n\telse{\r\n\treturn 0;\r\n\t}\r\n   }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport {\r\n   debounceTime, distinctUntilChanged, switchMap\r\n } from 'rxjs/operators';\r\n\r\nimport { Hero } from '../hero';\r\nimport { HeroService } from '../hero.service';\r\n\r\n@Component({\r\n  selector: 'app-hero-search',\r\n  templateUrl: './hero-search.component.html',\r\n  styleUrls: [ './hero-search.component.css' ]\r\n})\r\nexport class HeroSearchComponent implements OnInit {\r\n  heroes$!: Observable<Hero[]>;\r\n  private searchTerms = new Subject<string>();\r\n\r\n  constructor(private heroService: HeroService) {}\r\n\r\n  // Push a search term into the observable stream.\r\n  search(term: string): void {\r\n    this.searchTerms.next(term);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.heroes$ = this.searchTerms.pipe(\r\n      // wait 300ms after each keystroke before considering the term\r\n      debounceTime(300),\r\n\r\n      // ignore new term if same as previous term\r\n      distinctUntilChanged(),\r\n\r\n      // switch to new search observable each time the term changes\r\n      switchMap((term: string) => this.heroService.searchHeroes(term)),\r\n    );\r\n  }\r\n}\r\n","<div id=\"search-component\">\r\n  <label for=\"search-box\">Hero Search</label>\r\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\r\n\r\n  <ul class=\"search-result\">\r\n    <li *ngFor=\"let hero of heroes$ | async\" >\r\n      <a routerLink=\"/detail/{{hero.id}}\">\r\n        {{hero.name}}\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div *ngIf=\"messageService.messages.length\">\r\n\r\n  <h2>Messages</h2>\r\n  <button class=\"clear\"\r\n          (click)=\"messageService.clear()\">Clear messages</button>\r\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from '../message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  constructor(public messageService: MessageService) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { Hero } from './hero';\r\nimport { Rating } from './rating';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n  createDb() {\r\n    const heroes = [\r\n      { id: 11, name: 'Dr Nice' },\r\n      { id: 12, name: 'Narco' },\r\n      { id: 13, name: 'Bombasto' },\r\n      { id: 14, name: 'Celeritas' },\r\n      { id: 15, name: 'Magneta' },\r\n      { id: 16, name: 'RubberMan' },\r\n      { id: 17, name: 'Dynama' },\r\n      { id: 18, name: 'Dr IQ' },\r\n      { id: 19, name: 'Magma' },\r\n      { id: 20, name: 'Tornado' }\r\n    ];\r\n\r\nconst ratings = [\r\n{value: 1},\r\n{value: 2},\r\n{value: 3}\r\n];\r\n    \r\n\r\nreturn {heroes, ratings};\r\n  }\r\n\r\n\r\n  // Overrides the genId method to ensure that a hero always has an id.\r\n  // If the heroes array is empty,\r\n  // the method below returns the initial number (11).\r\n  // if the heroes array is not empty, the method below returns the highest\r\n  // hero id + 1.\r\n  genId(heroes: Hero[]): number {\r\n    return heroes.length > 0 ? Math.max(...heroes.map(hero => hero.id)) + 1 : 11;\r\n  }\r\n\r\n genValue(ratings: Rating[]): number {\r\n    return ratings.length > 0 ? Math.max(...ratings.map(rating => rating.value)) + 1 : 11;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}\r\n","<h2>Top Heroes</h2>\r\n<div class=\"heroes-menu\">\r\n  <a *ngFor=\"let hero of heroes\"\r\n      routerLink=\"/detail/{{hero.id}}\">\r\n      {{hero.name}}\r\n  </a>\r\n</div>\r\n\r\n<app-hero-search></app-hero-search>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Hero } from '../hero';\r\nimport { HeroService } from '../hero.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: [ './dashboard.component.css' ]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  heroes: Hero[] = [];\r\n\r\n  constructor(private heroService: HeroService) { }\r\n\r\n  ngOnInit() {\r\n    this.getHeroes();\r\n  }\r\n\r\n  getHeroes(): void {\r\n    this.heroService.getHeroes()\r\n      .subscribe(heroes => this.heroes = heroes.slice(1, 5));\r\n  }\r\n}\r\n","<h2>My Heroes</h2>\r\n\r\n<div>\r\n  <label id=\"new-hero\">Hero name: </label>\r\n  <input for=\"new-hero\" #heroName />\r\n\r\n  <!-- (click) passes input value to add() and then clears the input -->\r\n  <button class=\"add-button\" (click)=\"add(heroName.value); heroName.value=''\">\r\n    Add hero\r\n  </button>\r\n</div>\r\n\r\n<ul class=\"heroes\">\r\n  <li *ngFor=\"let hero of heroes\">\r\n    <a routerLink=\"/detail/{{hero.id}}\">\r\n      <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\r\n    </a>\r\n    <button class=\"delete\" title=\"delete hero\"\r\n      (click)=\"delete(hero)\">x</button>\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Hero } from '../hero';\r\nimport { HeroService } from '../hero.service';\r\n\r\n@Component({\r\n  selector: 'app-heroes',\r\n  templateUrl: './heroes.component.html',\r\n  styleUrls: ['./heroes.component.css']\r\n})\r\nexport class HeroesComponent implements OnInit {\r\n  heroes!: Hero[];\r\n\r\n  constructor(private heroService: HeroService) { }\r\n\r\n  ngOnInit() {\r\n    this.getHeroes();\r\n  }\r\n\r\n  getHeroes(): void {\r\n    this.heroService.getHeroes()\r\n    .subscribe(heroes => this.heroes = heroes);\r\n  }\r\n\r\n  add(name: string): void {\r\n    name = name.trim();\r\n    if (!name) { return; }\r\n    this.heroService.addHero({ name } as Hero)\r\n      .subscribe(hero => {\r\n        this.heroes.push(hero);\r\n      });\r\n  }\r\n\r\n  delete(hero: Hero): void {\r\n    this.heroes = this.heroes.filter(h => h !== hero);\r\n    this.heroService.deleteHero(hero.id).subscribe();\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Tour of Heroes';\r\n}\r\n","<h1>{{title}}</h1>\r\n<nav>\r\n  <a routerLink=\"/dashboard\">Dashboard</a>\r\n  <a routerLink=\"/heroes\">Heroes</a>\r\n  <a routerLink=\"/ratings\">Ratings</a>\r\n  <a routerLink=\"/boards\">Board</a>\r\n</nav>\r\n<router-outlet></router-outlet>\r\n<app-messages></app-messages>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { InMemoryDataService } from './in-memory-data.service';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\r\nimport { HeroesComponent } from './heroes/heroes.component';\r\nimport { HeroSearchComponent } from './hero-search/hero-search.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { BoardsComponent } from './boards/boards.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RatingsComponent } from './ratings/ratings.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\nMatCardModule,   \r\n HttpClientModule,\r\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\r\n    // and returns simulated server responses.\r\n    // Remove it when a real server is ready to receive requests.\r\n    HttpClientInMemoryWebApiModule.forRoot(\r\n      InMemoryDataService, { dataEncapsulation: false }\r\n    ),\r\n    BrowserAnimationsModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    HeroesComponent,\r\n    HeroDetailComponent,\r\n    MessagesComponent,\r\n    HeroSearchComponent,\r\n    BoardsComponent,\r\n    RatingsComponent,\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","<div *ngIf=\"hero\">\r\n  <h2>{{hero.name | uppercase}} Details</h2>\r\n  <div><span>id: </span>{{hero.id}}</div>\r\n  <div>\r\n    <label for=\"hero-name\">Hero name: </label>\r\n    <input id=\"hero-name\" [(ngModel)]=\"hero.name\" placeholder=\"Hero name\"/>\r\n  </div>\r\n  <button (click)=\"goBack()\">go back</button>\r\n  <button (click)=\"save()\">save</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { Hero } from '../hero';\r\nimport { HeroService } from '../hero.service';\r\n\r\n@Component({\r\n  selector: 'app-hero-detail',\r\n  templateUrl: './hero-detail.component.html',\r\n  styleUrls: [ './hero-detail.component.css' ]\r\n})\r\nexport class HeroDetailComponent implements OnInit {\r\n  hero!: Hero;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private heroService: HeroService,\r\n    private location: Location\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getHero();\r\n  }\r\n\r\n  getHero(): void {\r\n    const id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.heroService.getHero(id)\r\n      .subscribe(hero => this.hero = hero);\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.heroService.updateHero(this.hero)\r\n      .subscribe(() => this.goBack());\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Hero } from './hero';\r\nimport { MessageService } from './message.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class HeroService {\r\n\r\n  private heroesUrl = 'api/heroes';  // URL to web api\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private messageService: MessageService) { }\r\n\r\n  /** GET heroes from the server */\r\n  getHeroes(): Observable<Hero[]> {\r\n    return this.http.get<Hero[]>(this.heroesUrl)\r\n      .pipe(\r\n        tap(_ => this.log('fetched heroes')),\r\n        catchError(this.handleError<Hero[]>('getHeroes', []))\r\n      );\r\n  }\r\n\r\n  /** GET hero by id. Return `undefined` when id not found */\r\n  getHeroNo404<Data>(id: number): Observable<Hero> {\r\n    const url = `${this.heroesUrl}/?id=${id}`;\r\n    return this.http.get<Hero[]>(url)\r\n      .pipe(\r\n        map(heroes => heroes[0]), // returns a {0|1} element array\r\n        tap(h => {\r\n          const outcome = h ? `fetched` : `did not find`;\r\n          this.log(`${outcome} hero id=${id}`);\r\n        }),\r\n        catchError(this.handleError<Hero>(`getHero id=${id}`))\r\n      );\r\n  }\r\n\r\n  /** GET hero by id. Will 404 if id not found */\r\n  getHero(id: number): Observable<Hero> {\r\n    const url = `${this.heroesUrl}/${id}`;\r\n    return this.http.get<Hero>(url).pipe(\r\n      tap(_ => this.log(`fetched hero id=${id}`)),\r\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\r\n    );\r\n  }\r\n\r\n  /* GET heroes whose name contains search term */\r\n  searchHeroes(term: string): Observable<Hero[]> {\r\n    if (!term.trim()) {\r\n      // if not search term, return empty hero array.\r\n      return of([]);\r\n    }\r\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`).pipe(\r\n      tap(x => x.length ?\r\n         this.log(`found heroes matching \"${term}\"`) :\r\n         this.log(`no heroes matching \"${term}\"`)),\r\n      catchError(this.handleError<Hero[]>('searchHeroes', []))\r\n    );\r\n  }\r\n\r\n  //////// Save methods //////////\r\n\r\n  /** POST: add a new hero to the server */\r\n  addHero(hero: Hero): Observable<Hero> {\r\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\r\n      tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\r\n      catchError(this.handleError<Hero>('addHero'))\r\n    );\r\n  }\r\n\r\n  /** DELETE: delete the hero from the server */\r\n  deleteHero(id: number): Observable<Hero> {\r\n    const url = `${this.heroesUrl}/${id}`;\r\n\r\n    return this.http.delete<Hero>(url, this.httpOptions).pipe(\r\n      tap(_ => this.log(`deleted hero id=${id}`)),\r\n      catchError(this.handleError<Hero>('deleteHero'))\r\n    );\r\n  }\r\n\r\n  /** PUT: update the hero on the server */\r\n  updateHero(hero: Hero): Observable<any> {\r\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\r\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\r\n      catchError(this.handleError<any>('updateHero'))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a HeroService message with the MessageService */\r\n  private log(message: string) {\r\n    this.messageService.add(`HeroService: ${message}`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HeroesComponent } from './heroes/heroes.component';\r\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\r\nimport { BoardsComponent } from './boards/boards.component';\r\nimport { RatingsComponent } from './ratings/ratings.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n  { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'detail/:id', component: HeroDetailComponent },\r\n  { path: 'heroes', component: HeroesComponent },\r\n{path: 'ratings', component: RatingsComponent},\r\n{ path: 'boards', component: BoardsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Rating } from './rating';\r\nimport { RATINGS } from './mock-ratings';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RatingService {\r\n\r\nprivate ratingsUrl = 'api/ratings';  // URL to web api\r\n\r\nhttpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n\r\n  constructor(  private http: HttpClient) { }\r\n\r\n\r\n\r\n\r\n\r\ngetRatings(): Observable<Rating[]> {\r\n  return this.http.get<Rating[]>(this.ratingsUrl);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/** POST: add a new hero to the server */\r\naddRating(rating: Rating): Observable<Rating> {\r\n  return this.http.post<Rating>(this.ratingsUrl, rating, this.httpOptions);\r\n}\r\n\r\n\r\n}\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}