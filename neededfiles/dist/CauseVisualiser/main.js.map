{"version":3,"sources":["./src/app/boards/boards.component.ts","./src/app/boards/boards.component.html","./src/app/links/links.component.ts","./src/app/links/links.component.html","./src/app/ratings/ratings.component.ts","./src/app/ratings/ratings.component.html","./src/app/hero-search/hero-search.component.ts","./src/app/hero-search/hero-search.component.html","./src/environments/environment.ts","./src/app/mock-links.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/update.service.ts","./src/app/message.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/heroes/heroes.component.html","./src/app/heroes/heroes.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/link.service.ts","./src/app/output.service.ts","./src/app/app.module.ts","./src/app/link-detail/link-detail.component.html","./src/app/link-detail/link-detail.component.ts","./src/app/hero-detail/hero-detail.component.html","./src/app/hero-detail/hero-detail.component.ts","./src/app/hero.service.ts","./src/app/input.service.ts","./src/app/link-search/link-search.component.ts","./src/app/link-search/link-search.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n//import {InMemoryDataService} from '../in-memory-data.service';\n//import { RatingService } from '../rating.service';\n//import {Rating} from '../rating';\nimport { Link } from '../link';\nimport { OutputService } from '../output.service';\nimport {DashboardComponent } from '../dashboard/dashboard.component'\n\n@Component({\n  selector: 'app-boards',\n  templateUrl: './boards.component.html',\n  styleUrls: ['./boards.component.css']\n})\n\nexport class BoardsComponent implements OnInit {\n\n\timagePath: String;\n\n\tlinks: Link[]=[];\n\n\taverage = 0;\n  \n  constructor( private outputService: OutputService) {\n\n\n\n\n\n\t  this.imagePath = '/assets/StartPhase.png';\n  \n\n\n}\n\t\n\t\n\t\n\tngOnInit(): void {\n/* \t  console.log('put');\n  \tthis.putLinks(); */\n\tthis.getLinks();\n }\n\n\n\ngetLinks(): void {\n\tthis.outputService.getLinks(DashboardComponent.toSearch)\n\t\t.subscribe(links => {\n\t\t\tthis.links=links;\n\t\t\tconsole.log(this.links);\n\t\t\tconsole.log(this.links.length);\t\n\t\n/*Here below we calculate the average rating (this wasnt done on a separate functtion because for some\n reason the links were not initiliased when using a separate function !) */\n\n\tthis.average = 0;\n        for (var i = 0; i < this.links.length;i++ ){\n                this.average = this.average + this.links[i].rating;\n                console.log(this.links[i].rating);\n        }\n        this.average = this.average/this.links.length;\n        console.log(this.average);\n\n\nif (this.average > 0 && this.average <=2){\n\nthis.imagePath = '/assets/FirstPhase.png';\n\n}\n\nif (this.average > 2 && this.average <=4.5){\n\nthis.imagePath = '/assets/SecondPhase.png';\n\n}\n\nif (this.average > 4.5 && this.average <=6.5){\n\nthis.imagePath = '/assets/ThirdPhase.png';\n\n}\n\nif (this.average > 6.5 && this.average <=8){\n\nthis.imagePath = '/assets/FourthPhase.png';\n\n}\n\n\nif (this.average > 8 && this.average <=9){\n\nthis.imagePath = '/assets/FifthPhase.png';\n\n}\n\nif (this.average > 9 && this.average <=10){\n\nthis.imagePath = '/assets/FinalPhase.png';\n\n}\n\t});\n}\n\n\n\n\n//ratingService.getRatings().subscribe(rating => this.myRatings = rating);\n\n\n\n\n}\n","<!--...header and body content-->\n\n<mat-card class=\"example-card\" >\n<mat-card-header class=\"example-header\"\n\t\t\t\tstyle=\"padding-left: 40%;\">\n<h2><span></span>GeeksforGeeks</h2 >\n</mat-card-header>\n<mat-card-content>\n    <img [src] =\"imagePath\" \n          style=\"width: 600px;height: 400px;\">\n </mat-card-content>\n</mat-card>\n\n<!--... body and footer content-->\n\n","import { Component, OnInit } from '@angular/core';\nimport { Link } from '../link';\n//import { LINKS } from '../mock-links';\n//import { LinkService } from '../link.service';\nimport { InputService } from '../input.service';\nimport { OutputService } from '../output.service';\nimport {DashboardComponent } from '../dashboard/dashboard.component'\n\n/* const LinkData: Link[] =[\n{name: 'BLM protest does this', imagePath:'/assets/sample.png'},\n{name: 'BLM protest does that', imagePath:'/assets/sample.png'},\n{name: 'BLM protest also does this other thing', imagePath:'/assets/sample.png'}\n]; */\n\n@Component({\n  selector: 'app-links',\n  templateUrl: './links.component.html',\n  styleUrls: ['./links.component.css']\n})\n\nexport class LinksComponent implements OnInit {\n\nlinks: Link[] = [];\nselectedLink?: Link;\n//  constructor(private linkService: LinkService) { }\n  constructor(private inputService: InputService,private outputService: OutputService) { \n\t}\n\n  ngOnInit(): void {\n/* \t  console.log('put');\n  \tthis.putLinks(); */\n\tthis.getLinks();console.log(DashboardComponent.toSearch);\n  }\n\n\nonSelect(link: Link): void {\n  this.selectedLink = link;\n}\n\n/* putLinks(): void {\n\tvar j: number;\n\tfor(j=0;j<LinkData.length;j++){\n\t\tthis.inputService.input(LinkData[j]).subscribe();\n    }\n} */\n\n//getLinks(): void {\n//  this.linkService.getLinks()\n//      .subscribe(links => this.links = links);\n//}\n\ngetLinks(): void {\n\tthis.outputService.getLinks(DashboardComponent.toSearch)\n\t\t.subscribe(links => {\n\t\t\tthis.links=links;\n\t\t\tconsole.log(this.links);\n\t\t});\n}\n\n\n\n\n\n\n}\n","<h2>All links</h2>\n<ul class=\"links\">\n  <li *ngFor=\"let link of links\">\n <a routerLink=\"/detail/{{link.name}}\">\n<span class=\"badge\">{{link.name}}</span> \n<mat-card-content>\n    <img [src] =\"link.imagePath\" \n          style=\"width: 600px;height: 400px;\">\n  </mat-card-content>\n</a>  \n</li>\n</ul>\n\n\n\n<app-link-detail [link]=\"selectedLink\"></app-link-detail>\n","import { Component, OnInit } from '@angular/core';\n//import { Rating } from '../rating';\n//import { RATINGS } from '../mock-ratings';\n//import { RatingService } from '../rating.service';\nimport { OutputService } from '../output.service';\nimport { UpdateService } from '../update.service';\nimport { Link } from '../link';\nimport {DashboardComponent } from '../dashboard/dashboard.component'\n\n@Component({\n  selector: 'app-ratings',\n  templateUrl: './ratings.component.html',\n  styleUrls: ['./ratings.component.css']\n})\nexport class RatingsComponent implements OnInit {\n\nlinks: Link[]=[];\nj: number=0;\n\nconstructor(private outputService: OutputService,private updateService: UpdateService) { }\n\n\ngetLinks(): void {\n\tthis.outputService.getLinks(DashboardComponent.toSearch)\n\t\t.subscribe(links => {\n\t\t\tthis.links=links;\n\t\t\tconsole.log(this.links);\n\t\t});\n}\n\n  ngOnInit(){\n  this.getLinks();\n \n }\n\n\nadd(value: number): void {\n\tif (!value) { return; }\n\tif(this.j>=3){return;}\n\tvar toChange: Link={\n\t\tname: this.links[this.j].name,\n\t\timagePath: this.links[this.j].imagePath,\n\t\trating: value\n\t};console.log(this.j);\n\tconsole.log('tochange'+toChange.name);\n\tthis.updateService.update(toChange as Link)\n\t\t.subscribe();\n\tthis.getLinks();\n\tthis.j++;\n}\n\nconvertToNumber(string: string): number {\n\n\tvar flag = false;\n\tif(string.length>2){\n\t\treturn 0;\n\t}\n\tif(string.length==2){\n\t\tif(string.charCodeAt(0)!=49 || string.charCodeAt(1)!=48){\n\t\t\treturn 0;\n\t\t}\n\t\treturn 10;\n\t}\n\tif(string.charCodeAt(0)<49 || string.charCodeAt(0)>57)\n\t\treturn 0;\n\treturn string.charCodeAt(0)-48;\n   }\n\n}\n","<h1>My Ratings</h1>\n\n<h2>Please give every link a rating(score 1 to 10)</h2>\n<div class=\"rating\">\n<!--  <label id=\"new-rating\">Rating value: </label>-->\n  <input class=\"input\" type=\"number\" #rating />\n\n  <!-- (click) passes input value to add() and then clears the input -->\n  <button class=\"add-button\" (click) =\"add(convertToNumber(rating.value));rating.value=''\">\nAdd rating    \n  </button>\n</div>\n\n<div class=\"links\">\n  <div class=\"lr\" *ngFor=\"let link of links\">\n    <div class=\"badge1\">{{link.name}}</div><br><div class=\"badge2\">{{link.rating}}</div>\n  </div>\n</div>\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: [ './hero-search.component.css' ]\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$!: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.heroService.searchHeroes(term)),\n    );\n  }\n}\n","<div id=\"search-component\">\n  <label for=\"search-box\">Hero Search</label>\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n\n  <ul class=\"search-result\">\n    <li *ngFor=\"let hero of heroes$ | async\" >\n      <a routerLink=\"/detail/{{hero.id}}\">\n        {{hero.name}}\n      </a>\n    </li>\n  </ul>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Link } from './link';\n\nexport const LINKS: Link[] = [\n  { name:'BLM protest does this', imagePath: '/assets/sample.png',rating: 0 },\n  { name: 'BLM protest does that',  imagePath: '/assets/sample.png',rating: 0},\n  { name: 'BLM protest also does this other thing',  imagePath: '/assets/sample.png',rating: 0},\n];\n","<div *ngIf=\"messageService.messages.length\">\n\n  <h2>Messages</h2>\n  <button class=\"clear\"\n          (click)=\"messageService.clear()\">Clear messages</button>\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Link } from './link';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n\t\n  private REST_API_SERVER = \"http://localhost:9999/update\";\n  httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  public update(links: Link){console.log('update');\n    return this.http.post<Link>(this.REST_API_SERVER, links, this.httpOptions)\n\n}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n//import { Hero } from '../hero';\n//import { HeroService } from '../hero.service';\n//import { Link } from '../link';\n//import { LinkService } from '../link.service';\n\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  static toSearch : String = '?';\n/* links: Link[] = [];\n\n  constructor(private linkService: LinkService) { }\n\n  ngOnInit() {\n    this.getLinks();\n  }\n\n  getLinks(): void {\n    this.linkService.getLinks()\n      .subscribe(links => this.links = links.slice(1, 5));\n  } */\n  save( s: String ){\n\t  DashboardComponent.toSearch=s;\n  }\n  constructor(){}\n  ngOnInit(){}\n}\n","<div class=\"index\">\n<form>\n    <div class=\"title\">\n    <h1>Find News For You</h1>\n    <h2>Loads of news you want to know, give a visualiser for your news.<br></h2>\n    </div>\n    <div class=\"form-box\">\n        <input type=\"text\" class=\"search-field Topic\"\n        placeholder=\"Topic\" #toSearch>\n\n        <a [routerLink]=\"['/links']\" routerLinkActive=\"router-link-active\" >\n        <button class=\"search-btn\" type=\"button\" (click) =\"save(toSearch.value)\">Search</button>\n        </a>\n    </div>\n</form>\n</div>\n\n\n","<h2>My Heroes</h2>\n\n<div>\n  <label id=\"new-hero\">Hero name: </label>\n  <input for=\"new-hero\" #heroName />\n\n  <!-- (click) passes input value to add() and then clears the input -->\n  <button class=\"add-button\" (click)=\"add(heroName.value); heroName.value=''\">\n    Add hero\n  </button>\n</div>\n\n<ul class=\"heroes\">\n  <li *ngFor=\"let hero of heroes\">\n    <a routerLink=\"/detail/{{hero.id}}\">\n      <span class=\"badge\">{{hero.id}}</span> {{hero.name}}\n    </a>\n    <button class=\"delete\" title=\"delete hero\"\n      (click)=\"delete(hero)\">x</button>\n  </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n  heroes!: Hero[];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n    .subscribe(heroes => this.heroes = heroes);\n  }\n\n  add(name: string): void {\n    name = name.trim();\n    if (!name) { return; }\n    this.heroService.addHero({ name } as Hero)\n      .subscribe(hero => {\n        this.heroes.push(hero);\n      });\n  }\n\n  delete(hero: Hero): void {\n    this.heroes = this.heroes.filter(h => h !== hero);\n    this.heroService.deleteHero(hero.id).subscribe();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { InputService } from './input.service';\nimport { OutputService } from './output.service';\nimport { UpdateService } from './update.service';\nimport { Link } from './link';\n\nconst LinkData =[\n{name: 'BLM protest does this', imagePath:'/assets/sample.png',rating: 0},\n{name: 'BLM protest does that', imagePath:'/assets/sample.png',rating: 0},\n{name: 'BLM protest also does this other thing', imagePath:'/assets/sample.png',rating: 0}\n];\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\t constructor(private inputService: InputService,private updateService: UpdateService) { \n\t}\n\n  ngOnInit(): void {\n  \tthis.putLinks();\n  }\n  title = 'CauseVisualiser';\n  putLinks(): void {\n\tvar j;\n\tfor(j=0;j<LinkData.length;j++){\n\t\tthis.inputService.input(LinkData[j]).subscribe();\n\t\tthis.updateService.update(LinkData[j]).subscribe();\n\t}\n  }\n}\n","<div class=\"bkg\">\n  <img src=\"./assets/img/background.jpeg\" width=\"100%\" alt=\"\">\n</div>\n<div class=\"header\">\n  <div class=\"nav\">\n    <div class=\"logo\">\n      <img src=\"./assets/img/logo.png\" alt=\"\">\n    </div>\n    <div class=\"navList\">\n      <div class=\"navItem\" routerLink=\"/dashboard\">Dashboard</div>\n      <div class=\"navItem\" routerLink=\"/links\">Links</div>\n      <div class=\"navItem\" routerLink=\"/ratings\">Ratings</div>\n      <div class=\"navItem\" routerLink=\"/boards\">Board</div>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { Link } from './link';\nimport { LINKS } from './mock-links';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LinkService {\n\nprivate linksUrl = 'api/links';  // URL to web api\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\nhttpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\ngetLinks(): Observable<Link[]> {\n return this.http.get<Link[]>(this.linksUrl)\n .pipe(\n    tap(_ => this.log('fetched links')),\n      catchError(this.handleError<Link[]>('getLinks', []))\n    );\n}\n\n\ngetLink(name: string): Observable<Link> {\n// For now, assume that a link with the specified `id` always exists.\n    // Error handling will be added in the next step of the tutorial.\n    const link = LINKS.find(h => h.name === name) as Link;\n    this.messageService.add(`LinkService: fetched link name=${name}`);\n    return of(link);\n}\n\n\nprivate log(message: string) {\n  this.messageService.add(`linkService: ${message}`);\n}\n\n\n\n/**\n * Handle Http operation that failed.\n * Let the app continue.\n * @param operation - name of the operation that failed\n * @param result - optional value to return as the observable result\n */\nprivate handleError<T>(operation = 'operation', result?: T) {\n  return (error: any): Observable<T> => {\n\n    // TODO: send the error to remote logging infrastructure\n    console.error(error); // log to console instead\n\n    // TODO: better job of transforming error for user consumption\n    this.log(`${operation} failed: ${error.message}`);\n\n    // Let the app keep running by returning an empty result.\n    return of(result as T);\n  };\n}\n\n\n\n\n\n\n/* GET links whose name contains search term */\nsearchLinks(term: string): Observable<Link[]> {\n  if (!term.trim()) {\n    // if not search term, return empty link array.\n    return of([]);\n  }\n  return this.http.get<Link[]>(`${this.linksUrl}/?name=${term}`).pipe(\n    tap(x => x.length ?\n       this.log(`found links matching \"${term}\"`) :\n       this.log(`no links matching \"${term}\"`)),\n    catchError(this.handleError<Link[]>('searchLinks', []))\n  );\n}\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Link } from './link';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OutputService {\n\n  httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n  private REST_API_SERVER = \"http://localhost:9999/getall\";\n  \n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  public getLinks(name: String): Observable<Link[]>{\n    return this.http.get<Link[]>(this.REST_API_SERVER+\"/search?name=\"+name,this.httpOptions)\n\t.pipe(\n    tap(_ => this.log('fetched links')),\n      catchError(this.handleError<Link[]>('getLinks', []))\n    );\n \n}\n\nprivate log(message: string) {\n  this.messageService.add(`linkService: ${message}`);\n}\n\n/**\n * Handle Http operation that failed.\n * Let the app continue.\n * @param operation - name of the operation that failed\n * @param result - optional value to return as the observable result\n */\nprivate handleError<T>(operation = 'operation', result?: T) {\n  return (error: any): Observable<T> => {\n\n    // TODO: send the error to remote logging infrastructure\n    console.error(error); // log to console instead\n\n    // TODO: better job of transforming error for user consumption\n    this.log(`${operation} failed: ${error.message}`);\n\n    // Let the app keep running by returning an empty result.\n    return of(result as T);\n  };\n}\n\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatCardModule } from '@angular/material/card';\nimport {InputService} from './input.service';\nimport {OutputService} from './output.service';\n\n//import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n//import { InMemoryDataService } from './in-memory-data.service';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroSearchComponent } from './hero-search/hero-search.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { BoardsComponent } from './boards/boards.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RatingsComponent } from './ratings/ratings.component';\nimport { LinksComponent } from './links/links.component';\nimport { LinkDetailComponent } from './link-detail/link-detail.component';\nimport { LinkSearchComponent } from './link-search/link-search.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\nMatCardModule,   \n HttpClientModule,\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n/*     HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n    ), */\n    BrowserAnimationsModule\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    HeroSearchComponent,\n    BoardsComponent,\n    RatingsComponent,\n    LinksComponent,\n    LinkDetailComponent,\n    LinkSearchComponent,\n  ],\n  providers: [\n  InputService,\n  OutputService\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","<div *ngIf=\"link\">\n\n  <h2>{{link.name | uppercase}} Details</h2>\n  <div><span>name: </span>{{link.name}}</div>\n  <div>\n    <label for=\"link-name\">Link name: </label>\n <mat-card-content>\n    <img [src] =\"link.imagePath\" \n          style=\"width: 600px;height: 400px;\">\n  </mat-card-content>\n  </div>\n\n</div>\n\n<button (click)=\"goBack()\">go back</button>\n","import { Component, OnInit,  Input} from '@angular/core';\nimport { Link } from '../link';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { LinkService } from '../link.service';\n\n\n@Component({\n  selector: 'app-link-detail',\n  templateUrl: './link-detail.component.html',\n  styleUrls: ['./link-detail.component.css']\n})\nexport class LinkDetailComponent implements OnInit {\n\n@Input() link?: Link;\n\n  constructor( private route: ActivatedRoute,\n  private linkService: LinkService,\n  private location: Location) { }\n\n  ngOnInit(): void {\n  this.getLink();\n  }\n\ngetLink(): void {\n  var name = this.route.snapshot.paramMap.get('name');\nif (name == null){name = \"0\"} \n this.linkService.getLink(name)\n    .subscribe(link => this.link = link);\n}\n\n\ngoBack(): void {\n  this.location.back();\n}\n\n\n\n}\n","<div *ngIf=\"hero\">\n  <h2>{{hero.name | uppercase}} Details</h2>\n  <div><span>id: </span>{{hero.id}}</div>\n  <div>\n    <label for=\"hero-name\">Hero name: </label>\n    <input id=\"hero-name\" [(ngModel)]=\"hero.name\" placeholder=\"Hero name\"/>\n  </div>\n  <button (click)=\"goBack()\">go back</button>\n  <button (click)=\"save()\">save</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: [ './hero-detail.component.css' ]\n})\nexport class HeroDetailComponent implements OnInit {\n  hero!: Hero;\n\n  constructor(\n    private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  getHero(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.heroService.getHero(id)\n      .subscribe(hero => this.hero = hero);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    this.heroService.updateHero(this.hero)\n      .subscribe(() => this.goBack());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Hero } from './hero';\nimport { MessageService } from './message.service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class HeroService {\n\n  private heroesUrl = 'api/heroes';  // URL to web api\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /** GET heroes from the server */\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n      .pipe(\n        tap(_ => this.log('fetched heroes')),\n        catchError(this.handleError<Hero[]>('getHeroes', []))\n      );\n  }\n\n  /** GET hero by id. Return `undefined` when id not found */\n  getHeroNo404<Data>(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/?id=${id}`;\n    return this.http.get<Hero[]>(url)\n      .pipe(\n        map(heroes => heroes[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} hero id=${id}`);\n        }),\n        catchError(this.handleError<Hero>(`getHero id=${id}`))\n      );\n  }\n\n  /** GET hero by id. Will 404 if id not found */\n  getHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get<Hero>(url).pipe(\n      tap(_ => this.log(`fetched hero id=${id}`)),\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\n    );\n  }\n\n  /* GET heroes whose name contains search term */\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`).pipe(\n      tap(x => x.length ?\n         this.log(`found heroes matching \"${term}\"`) :\n         this.log(`no heroes matching \"${term}\"`)),\n      catchError(this.handleError<Hero[]>('searchHeroes', []))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new hero to the server */\n  addHero(hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n  /** PUT: update the hero on the server */\n  updateHero(hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>('updateHero'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { map, filter, switchMap } from 'rxjs/operators';\nimport { Link } from './link';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputService {\n\n  private REST_API_SERVER = \"http://localhost:9999/newlink\";\n  httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n  constructor(private http: HttpClient) { }\n\n  public input(links: Link): Observable<Link> {console.log('input');\n   return this.http.post<Link>(this.REST_API_SERVER, links, this.httpOptions)\n  }\n}","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Link } from '../link';\nimport { LinkService } from '../link.service';\n\n@Component({\n  selector: 'app-link-search',\n  templateUrl: './link-search.component.html',\n  styleUrls: [ './link-search.component.css' ]\n})\nexport class LinkSearchComponent implements OnInit {\n  links$!: Observable<Link[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private linkService: LinkService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.links$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.linkService.searchLinks(term)),\n    );\n  }\n}\n","<div id=\"search-component\">\n  <label for=\"search-box\">Link Search</label>\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n\n  <ul class=\"search-result\">\n    <li *ngFor=\"let link of links$ | async\" >\n      <a routerLink=\"/detail/{{link.name}}\">\n        {{link.name}}\n      </a>\n    </li>\n  </ul>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { BoardsComponent } from './boards/boards.component';\nimport { RatingsComponent } from './ratings/ratings.component';\nimport { LinksComponent } from './links/links.component';\nimport { LinkDetailComponent } from './link-detail/link-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n{ path: 'detail/:name', component: LinkDetailComponent },  \n{ path: 'links', component: LinksComponent },  \n{path: 'ratings', component: RatingsComponent},\n{ path: 'boards', component: BoardsComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}