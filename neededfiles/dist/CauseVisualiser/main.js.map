{"version":3,"sources":["./src/app/boards/boards.component.ts","./src/app/boards/boards.component.html","./src/app/links/links.component.ts","./src/app/links/links.component.html","./src/app/ratings/ratings.component.ts","./src/app/ratings/ratings.component.html","./src/environments/environment.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/update.service.ts","./src/app/message.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/output.service.ts","./src/app/app.module.ts","./src/app/link-detail/link-detail.component.html","./src/app/link-detail/link-detail.component.ts","./src/app/input.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n// import {InMemoryDataService} from '../in-memory-data.service';\n// import { RatingService } from '../rating.service';\n// import {Rating} from '../rating';\nimport { Link } from '../link';\nimport { OutputService } from '../output.service';\nimport {DashboardComponent } from '../dashboard/dashboard.component';\n\n@Component({\n  selector: 'app-boards',\n  templateUrl: './boards.component.html',\n  styleUrls: ['./boards.component.css']\n})\n\nexport class BoardsComponent implements OnInit {\n\n    public imagePath: string;\n\n    public links: Link[] = [];\n\n    public average = 0;\n\n    constructor( private outputService: OutputService) {\n\n\n      this.imagePath = '/assets/StartPhase.png';\n\n\n}\n\n\n    public ngOnInit(): void {\n/* \t  console.log('put');\n  \tthis.putLinks(); */\n    this.getLinks();\n }\n\n\n    public getLinks(): void {\n    this.outputService.getLinks(DashboardComponent.toSearch)\n        .subscribe(links => {\n            this.links = links;\n            console.log(this.links);\n            console.log(this.links.length);\n\n/*Here below we calculate the average rating (this wasnt done on a separate functtion because for some\n reason the links were not initiliased when using a separate function !) */\n\n            this.average = 0;\n            for ( let alink of links ){\n                this.average = this.average + alink.rating;\n                console.log(alink.rating);\n        }\n            this.average = this.average / this.links.length;\n            console.log(this.average);\n\n\n            if (this.average > 0 && this.average <= 2){\n\nthis.imagePath = '/assets/FirstPhase.png';\n\n}\n\n            if (this.average > 2 && this.average <= 4.5){\n\nthis.imagePath = '/assets/SecondPhase.png';\n\n}\n\n            if (this.average > 4.5 && this.average <= 6.5){\n\nthis.imagePath = '/assets/ThirdPhase.png';\n\n}\n\n            if (this.average > 6.5 && this.average <= 8){\n\nthis.imagePath = '/assets/FourthPhase.png';\n\n}\n\n\n            if (this.average > 8 && this.average <= 9){\n\nthis.imagePath = '/assets/FifthPhase.png';\n\n}\n\n            if (this.average > 9 && this.average <= 10){\n\nthis.imagePath = '/assets/FinalPhase.png';\n\n}\n    });\n}\n\n\n// ratingService.getRatings().subscribe(rating => this.myRatings = rating);\n\n\n}\n","<!--...header and body content-->\n\n<div class=\"example-card\" >\n<h2><span></span>Geeks for Geeks</h2 >\n<div class=\"chessbod\">\n    <img [src] =\"imagePath\" \n          style=\"width: 500px;height: 500px;\">\n</div>\n</div>\n\n<!--... body and footer content-->\n\n","import { Component, OnInit } from '@angular/core';\nimport { Link } from '../link';\n// import { LINKS } from '../mock-links';\n// import { LinkService } from '../link.service';\nimport { InputService } from '../input.service';\nimport { OutputService } from '../output.service';\nimport {DashboardComponent } from '../dashboard/dashboard.component';\n\n/* const LinkData: Link[] =[\n{name: 'BLM protest does this', imagePath:'/assets/sample.png'},\n{name: 'BLM protest does that', imagePath:'/assets/sample.png'},\n{name: 'BLM protest also does this other thing', imagePath:'/assets/sample.png'}\n]; */\n\n@Component({\n  selector: 'app-links',\n  templateUrl: './links.component.html',\n  styleUrls: ['./links.component.css']\n})\n\nexport class LinksComponent implements OnInit {\n\npublic links: Link[] = [];\npublic selectedLink?: Link;\n//  constructor(private linkService: LinkService) { }\nconstructor(private inputService: InputService, private outputService: OutputService) {\n    }\n\npublic ngOnInit(): void {\n/* \t  console.log('put');\n  \tthis.putLinks(); */\n    this.getLinks(); console.log(DashboardComponent.toSearch);\n  }\n\n\npublic onSelect(alink: Link): void {\n  this.selectedLink = alink;\n}\n\n/* putLinks(): void {\n\tvar j: number;\n\tfor(j=0;j<LinkData.length;j++){\n\t\tthis.inputService.input(LinkData[j]).subscribe();\n    }\n} */\n\n// getLinks(): void {\n//  this.linkService.getLinks()\n//      .subscribe(links => this.links = links);\n// }\n\npublic getLinks(): void {\n    this.outputService.getLinks(DashboardComponent.toSearch)\n        .subscribe(links => {\n            this.links = links;\n            console.log(this.links);\n        });\n}\n\n\n}\n","<h1>All links</h1>\n<ul class=\"links\">\n  <li class=\"title\" *ngFor=\"let link of links\">\n <a routerLink=\"/detail/{{link.name}}\">\n<span class=\"badge\">{{link.name}}</span> \n</a>  \n</li>\n</ul>\n\n\n","import { Component, OnInit } from '@angular/core';\n// import { Rating } from '../rating';\n// import { RATINGS } from '../mock-ratings';\n// import { RatingService } from '../rating.service';\nimport { OutputService } from '../output.service';\nimport { UpdateService } from '../update.service';\nimport { Link } from '../link';\nimport {DashboardComponent } from '../dashboard/dashboard.component';\n\n@Component({\n  selector: 'app-ratings',\n  templateUrl: './ratings.component.html',\n  styleUrls: ['./ratings.component.css']\n})\nexport class RatingsComponent implements OnInit {\n\npublic links: Link[] = [];\npublic j = 0;\n\nconstructor(private outputService: OutputService, private updateService: UpdateService) { }\n\n\npublic getLinks(): void {\n    this.outputService.getLinks(DashboardComponent.toSearch)\n        .subscribe(links => {\n            this.links = links;\n            console.log(this.links);\n        });\n}\n\npublic ngOnInit(){\n  this.getLinks();\n\n }\n\n\npublic add(value: number): void {\n    if (!value) { return; }\n    if (this.j >= this.links.length){return; }console.log(this.j); console.log(this.links.length);\n    let toChange: Link = {\n        name: this.links[this.j].name,\n        imagePath: this.links[this.j].imagePath,\n        rating: value\n    };\n    console.log('tochange' + toChange.name);\n    this.updateService.update(toChange as Link)\n        .subscribe();\n    this.getLinks();\n    this.j++;\n}\n\npublic convertToNumber(astring: string): number {\n\n    let flag = false;\n    if (astring.length > 2){\n        return 0;\n    }\n    if (astring.length === 2){\n        if (astring.charCodeAt(0) !== 49 || astring.charCodeAt(1) !== 48){\n            return 0;\n        }\n        return 10;\n    }\n    if (astring.charCodeAt(0) < 49 || astring.charCodeAt(0) > 57) {\n        return 0;\n    }\n    return astring.charCodeAt(0) - 48;\n   }\n\n}\n","<h1>My Ratings</h1>\r\n\r\n<h2>Please give every link a rating(score 1 to 10)</h2>\r\n<div class=\"rating\">\r\n<!--  <label id=\"new-rating\">Rating value: </label>-->\r\n  <input class=\"input\" type=\"number\" #rating />\r\n\r\n  <!-- (click) passes input value to add() and then clears the input -->\r\n  <button class=\"add-button\" (click) =\"add(convertToNumber(rating.value));rating.value=''\">\r\nAdd rating    \r\n  </button>\r\n</div>\r\n\r\n<div class=\"links\">\r\n  <div class=\"lr\" *ngFor=\"let link of links\">\r\n    <div class=\"badge1\">{{link.name}}</div><br><div class=\"badge2\">{{link.rating}}</div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div *ngIf=\"messageService.messages.length\">\n\n  <h2>Messages</h2>\n  <button class=\"clear\"\n          (click)=\"messageService.clear()\">Clear messages</button>\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  public ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Link } from './link';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  public httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n  private REST_API_SERVER = 'http://localhost:9999/update';\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  public update(links: Link){console.log('update');\n                             return this.http.post<Link>(this.REST_API_SERVER, links, this.httpOptions);\n\n}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  public messages: string[] = [];\n\n  public add(message: string) {\n    this.messages.push(message);\n  }\n\n  public clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n// import { Hero } from '../hero';\n// import { HeroService } from '../hero.service';\n// import { Link } from '../link';\n// import { LinkService } from '../link.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  public static toSearch: string = '?';\n  constructor(){}\n/* links: Link[] = [];\n\n  constructor(private linkService: LinkService) { }\n\n  ngOnInit() {\n    this.getLinks();\n  }\n\n  getLinks(): void {\n    this.linkService.getLinks()\n      .subscribe(links => this.links = links.slice(1, 5));\n  } */\n  public save( s: string ){\n      DashboardComponent.toSearch = s;\n  }\n  public ngOnInit(){}\n}\n","<div class=\"index\">\r\n<form>\r\n    <div class=\"title\">\r\n    <h1>Find News For You</h1>\r\n    <h2>Loads of news you want to know, give a visualiser for your news.<br></h2>\r\n    </div>\r\n    <div class=\"form-box\">\r\n        <input type=\"text\" class=\"search-field Topic\"\r\n        placeholder=\"Topic\" #toSearch>\r\n\r\n        <a [routerLink]=\"['/links']\" routerLinkActive=\"router-link-active\" >\r\n        <button class=\"search-btn\" type=\"button\" (click) =\"save(toSearch.value)\">Search</button>\r\n        </a>\r\n    </div>\r\n</form>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { InputService } from './input.service';\nimport { OutputService } from './output.service';\nimport { UpdateService } from './update.service';\nimport { Link } from './link';\n\nconst linkData = [\n{name: 'USA: Law enforcement violated Black Lives Matter protesters’ human rights, documents acts of police violence and excessive Force', imagePath: '/assets/sample1.png', rating: 0},\n{name: 'As protests continue over police killings, lawmakers try to add to the list of crimes protesters could face', imagePath: '/assets/sample2.png', rating: 0},\n{name: 'Black Lives Matters activists outline policy goals', imagePath: '/assets/sample3.png', rating: 0},\n{name: 'Protests In White And Black, And The Different Response Of Law Enforcement', imagePath: '/assets/sample4.png', rating: 0},\n{name: 'Republicans Respond to Black Lives Matter with Anti-Protest Bills', imagePath: '/assets/sample5.png', rating: 0},\n{name: 'The Double Standard for Policing Capitol Rioters and BLM Protesters', imagePath: '/assets/sample6.png', rating: 0},\n{name: 'The United States has its best opportunity in 150 years to belatedly fulfill its promise as a multiracial democracy.', imagePath: '/assets/sample7.png', rating: 0},\n{name: 'Republicans push ‘tsunami’ of harsh anti-protest laws after BLM rallies', imagePath: '/assets/sample8.png', rating: 0},\n{name: 'The birth of a militia: how an armed group polices Black Lives Matter protests', imagePath: '/assets/sample9.png', rating: 0},\n{name: 'Killings by Police Declined after Black Lives Matter Protests', imagePath: '/assets/sample10.png', rating: 0},\n{name: 'From Civil Rights to Black Lives Matter', imagePath: '/assets/sample11.png', rating: 0},\n{name: 'From the Black Panthers to Black Lives Matter, the ongoing fight to end police violence against black Americans', imagePath: '/assets/sample12.png', rating: 0},\n{name: 'Black Lives Matter protests and the Capitol assault: Comparing the police response', imagePath: '/assets/sample13.png', rating: 0},\n{name: 'What If The Capital Rioters Were Black? The Contrasting Police Response To Black Lives Matter Vs Trump Mob', imagePath: '/assets/sample14.png', rating: 0},\n{name: 'Rioters breached US Capitol security on Wednesday. This was the police response when it was Black protesters on DC streets last year', imagePath: '/assets/sample15.png', rating: 0},\n{name: 'False equivalency between Black Lives Matter and Capitol siege: Experts, advocates', imagePath: '/assets/sample16.png', rating: 0},\n{name: 'BLACK LIVES MATTER PROTESTS: WHAT’S BEEN ACHIEVED SO FAR', imagePath: '/assets/sample17.png', rating: 0},\n{name: 'People Are Contrasting Photos From The Attempted Capitol Coup With Those From Black Lives Matter Protests', imagePath: '/assets/sample18.png', rating: 0},\n{name: 'BLACK LIVES MATTER: HOW SHOULD WE RESPOND?', imagePath: '/assets/sample19.png', rating: 0},\n{name: 'In 2020, the Black Lives Matter movement shook the world', imagePath: '/assets/sample20.png', rating: 0},\n];\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public title = 'CauseVisualiser';\n  constructor(private inputService: InputService, private updateService: UpdateService) {\n    }\n\n  public ngOnInit(): void {\n      this.putLinks();\n  }\n  public putLinks(): void {\n    let j;\n    for (j = 0; j < linkData.length; j++){\n        this.inputService.input(linkData[j]).subscribe();\n        this.updateService.update(linkData[j]).subscribe();\n    }\n  }\n}\n","<div class=\"bkg\">\r\n  <img src=\"./assets/img/background.jpeg\" width=\"100%\" alt=\"\">\r\n</div>\r\n<div class=\"header\">\r\n  <div class=\"nav\">\r\n    <div class=\"logo\">\r\n      <img src=\"./assets/img/logo.png\" alt=\"\">\r\n    </div>\r\n    <div class=\"navList\">\r\n      <div class=\"navItem\" routerLink=\"/dashboard\">Dashboard</div>\r\n      <div class=\"navItem\" routerLink=\"/links\">Links</div>\r\n      <div class=\"navItem\" routerLink=\"/ratings\">Ratings</div>\r\n      <div class=\"navItem\" routerLink=\"/boards\">Board</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Link } from './link';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OutputService {\n\n  public httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n  private REST_API_SERVER = 'http://localhost:9999/getall';\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  public getLinks(name: String): Observable<Link[]>{\n    return this.http.get<Link[]>(this.REST_API_SERVER + '/search?name=' + name, this.httpOptions)\n    .pipe(\n    tap(_ => this.log('fetched links')),\n    catchError(this.handleError<Link[]>('getLinks', []))\n    );\n\n}\n\n  private log(message: string) {\n  this.messageService.add(`linkService: ${message}`);\n}\n\n/**\n * Handle Http operation that failed.\n * Let the app continue.\n * @param operation - name of the operation that failed\n * @param result - optional value to return as the observable result\n */\n  private handleError<T>(operation = 'operation', result?: T) {\n  return (error: any): Observable<T> => {\n\n    // TODO: send the error to remote logging infrastructure\n    console.error(error); // log to console instead\n\n    // TODO: better job of transforming error for user consumption\n    this.log(`${operation} failed: ${error.message}`);\n\n    // Let the app keep running by returning an empty result.\n    return of(result as T);\n  };\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatCardModule } from '@angular/material/card';\nimport {InputService} from './input.service';\nimport {OutputService} from './output.service';\n\n// import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n// import { InMemoryDataService } from './in-memory-data.service';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { BoardsComponent } from './boards/boards.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RatingsComponent } from './ratings/ratings.component';\nimport { LinksComponent } from './links/links.component';\nimport { LinkDetailComponent } from './link-detail/link-detail.component';\n// import { LinkSearchComponent } from './link-search/link-search.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    MatCardModule,\n    HttpClientModule,\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n/*     HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n    ), */\n    BrowserAnimationsModule\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    MessagesComponent,\n    BoardsComponent,\n    RatingsComponent,\n    LinksComponent,\n    LinkDetailComponent,\n//    LinkSearchComponent,\n  ],\n  providers: [\n  InputService,\n  OutputService\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","<div *ngIf=\"link\">\n\n  <h2>{{link.name | uppercase}} Details</h2>\n<!--   <div><span>name: </span>{{link.name}}</div> -->\n  <div>\n    <!-- <label for=\"link-name\">Link name: </label> -->\n <mat-card-content>\n    <img [src] =\"link.imagePath\" \n          style=\"max-width: 600px;height: auto;\">\n  </mat-card-content>\n  </div>\n\n</div>\n\n<button (click)=\"goBack()\">go back</button>\n","import { Component, OnInit,  Input} from '@angular/core';\nimport { Link } from '../link';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OutputService } from '../output.service';\n\n// import { LinkService } from '../link.service';\n\n\n@Component({\n  selector: 'app-link-detail',\n  templateUrl: './link-detail.component.html',\n  styleUrls: ['./link-detail.component.css']\n})\nexport class LinkDetailComponent implements OnInit {\n\n@Input() public link?: Link;\n\nconstructor( private route: ActivatedRoute, private outputService: OutputService, private location: Location) { }\n\npublic ngOnInit(): void {\n  this.getLink();\n  }\n\npublic getLink(): void {\n    let name = this.route.snapshot.paramMap.get('name');\n    if (name === undefined){name = '0';}\n    this.outputService.getLinks(name!)\n    .subscribe(links => this.link = links[0]);\n}\n\n\npublic goBack(): void {\n    this.location.back();\n}\n\n\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry, map, filter, switchMap } from 'rxjs/operators';\nimport { Link } from './link';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputService {\n  public httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n  private REST_API_SERVER = 'http://localhost:9999/newlink';\n\n  constructor(private http: HttpClient) { }\n\n  public input(links: Link): Observable<Link> {console.log('input');\n                                               return this.http.post<Link>(this.REST_API_SERVER, links, this.httpOptions);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BoardsComponent } from './boards/boards.component';\nimport { RatingsComponent } from './ratings/ratings.component';\nimport { LinksComponent } from './links/links.component';\nimport { LinkDetailComponent } from './link-detail/link-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'detail/:name', component: LinkDetailComponent },\n  { path: 'links', component: LinksComponent },\n  {path: 'ratings', component: RatingsComponent},\n  { path: 'boards', component: BoardsComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}