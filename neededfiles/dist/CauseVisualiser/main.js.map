{"version":3,"sources":["./src/app/boards/boards.component.ts","./src/app/boards/boards.component.html","./src/app/links/links.component.ts","./src/app/links/links.component.html","./src/app/ratings/ratings.component.ts","./src/app/ratings/ratings.component.html","./src/environments/environment.ts","./src/app/mock-links.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/update.service.ts","./src/app/message.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/link.service.ts","./src/app/output.service.ts","./src/app/app.module.ts","./src/app/link-detail/link-detail.component.html","./src/app/link-detail/link-detail.component.ts","./src/app/input.service.ts","./src/app/link-search/link-search.component.ts","./src/app/link-search/link-search.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n//import {InMemoryDataService} from '../in-memory-data.service';\r\n//import { RatingService } from '../rating.service';\r\n//import {Rating} from '../rating';\r\nimport { Link } from '../link';\r\nimport { OutputService } from '../output.service';\r\nimport {DashboardComponent } from '../dashboard/dashboard.component'\r\n\r\n@Component({\r\n  selector: 'app-boards',\r\n  templateUrl: './boards.component.html',\r\n  styleUrls: ['./boards.component.css']\r\n})\r\n\r\nexport class BoardsComponent implements OnInit {\r\n\r\n\timagePath: String;\r\n\r\n\tlinks: Link[]=[];\r\n\r\n\taverage = 0;\r\n  \r\n  constructor( private outputService: OutputService) {\r\n\r\n\r\n\r\n\r\n\r\n\t  this.imagePath = '/assets/StartPhase.png';\r\n  \r\n\r\n\r\n}\r\n\t\r\n\t\r\n\t\r\n\tngOnInit(): void {\r\n/* \t  console.log('put');\r\n  \tthis.putLinks(); */\r\n\tthis.getLinks();\r\n }\r\n\r\n\r\n\r\ngetLinks(): void {\r\n\tthis.outputService.getLinks(DashboardComponent.toSearch)\r\n\t\t.subscribe(links => {\r\n\t\t\tthis.links=links;\r\n\t\t\tconsole.log(this.links);\r\n\t\t\tconsole.log(this.links.length);\t\r\n\t\r\n/*Here below we calculate the average rating (this wasnt done on a separate functtion because for some\r\n reason the links were not initiliased when using a separate function !) */\r\n\r\n\tthis.average = 0;\r\n        for (var i = 0; i < this.links.length;i++ ){\r\n                this.average = this.average + this.links[i].rating;\r\n                console.log(this.links[i].rating);\r\n        }\r\n        this.average = this.average/this.links.length;\r\n        console.log(this.average);\r\n\r\n\r\nif (this.average > 0 && this.average <=2){\r\n\r\nthis.imagePath = '/assets/FirstPhase.png';\r\n\r\n}\r\n\r\nif (this.average > 2 && this.average <=4.5){\r\n\r\nthis.imagePath = '/assets/SecondPhase.png';\r\n\r\n}\r\n\r\nif (this.average > 4.5 && this.average <=6.5){\r\n\r\nthis.imagePath = '/assets/ThirdPhase.png';\r\n\r\n}\r\n\r\nif (this.average > 6.5 && this.average <=8){\r\n\r\nthis.imagePath = '/assets/FourthPhase.png';\r\n\r\n}\r\n\r\n\r\nif (this.average > 8 && this.average <=9){\r\n\r\nthis.imagePath = '/assets/FifthPhase.png';\r\n\r\n}\r\n\r\nif (this.average > 9 && this.average <=10){\r\n\r\nthis.imagePath = '/assets/FinalPhase.png';\r\n\r\n}\r\n\t});\r\n}\r\n\r\n\r\n\r\n\r\n//ratingService.getRatings().subscribe(rating => this.myRatings = rating);\r\n\r\n\r\n\r\n\r\n}\r\n","<!--...header and body content-->\r\n\r\n<mat-card class=\"example-card\" >\r\n<mat-card-header class=\"example-header\"\r\n\t\t\t\tstyle=\"padding-left: 40%;\">\r\n<h2><span></span>GeeksforGeeks</h2 >\r\n</mat-card-header>\r\n<mat-card-content>\r\n    <img [src] =\"imagePath\" \r\n          style=\"width: 600px;height: 400px;\">\r\n </mat-card-content>\r\n</mat-card>\r\n\r\n<!--... body and footer content-->\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Link } from '../link';\r\n//import { LINKS } from '../mock-links';\r\n//import { LinkService } from '../link.service';\r\nimport { InputService } from '../input.service';\r\nimport { OutputService } from '../output.service';\r\nimport {DashboardComponent } from '../dashboard/dashboard.component'\r\n\r\n/* const LinkData: Link[] =[\r\n{name: 'BLM protest does this', imagePath:'/assets/sample.png'},\r\n{name: 'BLM protest does that', imagePath:'/assets/sample.png'},\r\n{name: 'BLM protest also does this other thing', imagePath:'/assets/sample.png'}\r\n]; */\r\n\r\n@Component({\r\n  selector: 'app-links',\r\n  templateUrl: './links.component.html',\r\n  styleUrls: ['./links.component.css']\r\n})\r\n\r\nexport class LinksComponent implements OnInit {\r\n\r\nlinks: Link[] = [];\r\nselectedLink?: Link;\r\n//  constructor(private linkService: LinkService) { }\r\n  constructor(private inputService: InputService,private outputService: OutputService) { \r\n\t}\r\n\r\n  ngOnInit(): void {\r\n/* \t  console.log('put');\r\n  \tthis.putLinks(); */\r\n\tthis.getLinks();console.log(DashboardComponent.toSearch);\r\n  }\r\n\r\n\r\nonSelect(link: Link): void {\r\n  this.selectedLink = link;\r\n}\r\n\r\n/* putLinks(): void {\r\n\tvar j: number;\r\n\tfor(j=0;j<LinkData.length;j++){\r\n\t\tthis.inputService.input(LinkData[j]).subscribe();\r\n    }\r\n} */\r\n\r\n//getLinks(): void {\r\n//  this.linkService.getLinks()\r\n//      .subscribe(links => this.links = links);\r\n//}\r\n\r\ngetLinks(): void {\r\n\tthis.outputService.getLinks(DashboardComponent.toSearch)\r\n\t\t.subscribe(links => {\r\n\t\t\tthis.links=links;\r\n\t\t\tconsole.log(this.links);\r\n\t\t});\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<h2>All links</h2>\r\n<ul class=\"links\">\r\n  <li *ngFor=\"let link of links\">\r\n <a routerLink=\"/detail/{{link.name}}\">\r\n<span class=\"badge\">{{link.name}}</span> \r\n<mat-card-content>\r\n    <img [src] =\"link.imagePath\" \r\n          style=\"width: 600px;height: 400px;\">\r\n  </mat-card-content>\r\n</a>  \r\n</li>\r\n</ul>\r\n\r\n\r\n\r\n<app-link-detail [link]=\"selectedLink\"></app-link-detail>\r\n","import { Component, OnInit } from '@angular/core';\r\n//import { Rating } from '../rating';\r\n//import { RATINGS } from '../mock-ratings';\r\n//import { RatingService } from '../rating.service';\r\nimport { OutputService } from '../output.service';\r\nimport { UpdateService } from '../update.service';\r\nimport { Link } from '../link';\r\nimport {DashboardComponent } from '../dashboard/dashboard.component'\r\n\r\n@Component({\r\n  selector: 'app-ratings',\r\n  templateUrl: './ratings.component.html',\r\n  styleUrls: ['./ratings.component.css']\r\n})\r\nexport class RatingsComponent implements OnInit {\r\n\r\nlinks: Link[]=[];\r\nj: number=0;\r\n\r\nconstructor(private outputService: OutputService,private updateService: UpdateService) { }\r\n\r\n\r\ngetLinks(): void {\r\n\tthis.outputService.getLinks(DashboardComponent.toSearch)\r\n\t\t.subscribe(links => {\r\n\t\t\tthis.links=links;\r\n\t\t\tconsole.log(this.links);\r\n\t\t});\r\n}\r\n\r\n  ngOnInit(){\r\n  this.getLinks();\r\n \r\n }\r\n\r\n\r\nadd(value: number): void {\r\n\tif (!value) { return; }\r\n\tif(this.j>=this.links.length){return;}\r\n\tvar toChange: Link={\r\n\t\tname: this.links[this.j].name,\r\n\t\timagePath: this.links[this.j].imagePath,\r\n\t\trating: value\r\n\t};console.log(this.j);\r\n\tconsole.log('tochange'+toChange.name);\r\n\tthis.updateService.update(toChange as Link)\r\n\t\t.subscribe();\r\n\tthis.getLinks();\r\n\tthis.j++;\r\n}\r\n\r\nconvertToNumber(string: string): number {\r\n\r\n\tvar flag = false;\r\n\tif(string.length>2){\r\n\t\treturn 0;\r\n\t}\r\n\tif(string.length==2){\r\n\t\tif(string.charCodeAt(0)!=49 || string.charCodeAt(1)!=48){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn 10;\r\n\t}\r\n\tif(string.charCodeAt(0)<49 || string.charCodeAt(0)>57)\r\n\t\treturn 0;\r\n\treturn string.charCodeAt(0)-48;\r\n   }\r\n\r\n}\r\n","<h2>My Ratings</h2>\r\n<ul class=\"links\">\r\n  <li *ngFor=\"let link of links\">\r\n    <span class=\"badge\">{{link.name}}</span><span class=\"badge\">{{link.rating}}</span>\r\n  </li>\r\n</ul>\r\n\r\n\r\n<div>\r\n<!--  <label id=\"new-rating\">Rating value: </label>-->\r\n  <input type=\"number\" #rating />\r\n\r\n  <!-- (click) passes input value to add() and then clears the input -->\r\n  <button class=\"add-button\" (click) =\"add(convertToNumber(rating.value));rating.value=''\">\r\nAdd rating    \r\n  </button>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Link } from './link';\r\n\r\nexport const LINKS: Link[] = [\r\n  { name:'BLM protest does this', imagePath: '/assets/sample.png',rating: 0 },\r\n  { name: 'BLM protest does that',  imagePath: '/assets/sample.png',rating: 0},\r\n  { name: 'BLM protest also does this other thing',  imagePath: '/assets/sample.png',rating: 0},\r\n];\r\n","<div *ngIf=\"messageService.messages.length\">\r\n\r\n  <h2>Messages</h2>\r\n  <button class=\"clear\"\r\n          (click)=\"messageService.clear()\">Clear messages</button>\r\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService } from '../message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  constructor(public messageService: MessageService) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { MessageService } from './message.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Link } from './link';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UpdateService {\r\n\t\r\n  private REST_API_SERVER = \"http://localhost:9999/update\";\r\n  httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n  constructor(private http: HttpClient, private messageService: MessageService) { }\r\n\r\n  public update(links: Link){console.log('update');\r\n    return this.http.post<Link>(this.REST_API_SERVER, links, this.httpOptions)\r\n\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  messages: string[] = [];\r\n\r\n  add(message: string) {\r\n    this.messages.push(message);\r\n  }\r\n\r\n  clear() {\r\n    this.messages = [];\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n//import { Hero } from '../hero';\r\n//import { HeroService } from '../hero.service';\r\n//import { Link } from '../link';\r\n//import { LinkService } from '../link.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: [ './dashboard.component.css' ]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  static toSearch : String = '?';\r\n/* links: Link[] = [];\r\n\r\n  constructor(private linkService: LinkService) { }\r\n\r\n  ngOnInit() {\r\n    this.getLinks();\r\n  }\r\n\r\n  getLinks(): void {\r\n    this.linkService.getLinks()\r\n      .subscribe(links => this.links = links.slice(1, 5));\r\n  } */\r\n  save( s: String ){\r\n\t  DashboardComponent.toSearch=s;\r\n  }\r\n  constructor(){}\r\n  ngOnInit(){}\r\n}\r\n","<div class=\"index\">\r\n<form>\r\n    <div class=\"title\">\r\n    <h1>Find News For You</h1>\r\n    <h2>Loads of news you want to know, give you a visualiser for your news.<br></h2>\r\n    </div>\r\n    <div class=\"form-box\">\r\n        <input type=\"text\" class=\"search-field HM\"\r\n        placeholder=\"Topic\" #toSearch>\r\n\r\n        <input type=\"text\" class=\"search-field Topic\"\r\n        placeholder=\"Business\">\r\n        <a [routerLink]=\"['/links']\" routerLinkActive=\"router-link-active\" >\r\n        <button class=\"search-btn\" type=\"button\" (click) =\"save(toSearch.value)\">Search</button>\r\n        </a>\r\n    </div>\r\n</form>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InputService } from './input.service';\r\nimport { OutputService } from './output.service';\r\nimport { UpdateService } from './update.service';\r\nimport { Link } from './link';\r\n\r\nconst LinkData =[\r\n{name: 'BLM protest does this', imagePath:'/assets/sample.png',rating: 0},\r\n{name: 'BLM protest does that', imagePath:'/assets/sample.png',rating: 0},\r\n{name: 'BLM protest also does this other thing', imagePath:'/assets/sample.png',rating: 0}\r\n];\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\t constructor(private inputService: InputService,private updateService: UpdateService) { \r\n\t}\r\n\r\n  ngOnInit(): void {\r\n  \tthis.putLinks();\r\n  }\r\n  title = 'CauseVisualiser';\r\n  putLinks(): void {\r\n\tvar j;\r\n\tfor(j=0;j<LinkData.length;j++){\r\n\t\tthis.inputService.input(LinkData[j]).subscribe();\r\n\t\tthis.updateService.update(LinkData[j]).subscribe();\r\n\t}\r\n  }\r\n}\r\n","<div class=\"bkg\">\r\n  <img src=\"./assets/img/background.jpeg\" width=\"100%\" alt=\"\">\r\n</div>\r\n<div class=\"header\">\r\n  <div class=\"nav\">\r\n    <div class=\"logo\">\r\n      <img src=\"./assets/img/logo.png\" alt=\"\">\r\n    </div>\r\n    <div class=\"navList\">\r\n      <div class=\"navItem\" routerLink=\"/dashboard\">Dashboard</div>\r\n      <div class=\"navItem\" routerLink=\"/links\">Links</div>\r\n      <div class=\"navItem\" routerLink=\"/ratings\">Ratings</div>\r\n      <div class=\"navItem\" routerLink=\"/boards\">Board</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport { Link } from './link';\r\nimport { LINKS } from './mock-links';\r\nimport { Observable, of } from 'rxjs';\r\nimport { MessageService } from './message.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LinkService {\r\n\r\nprivate linksUrl = 'api/links';  // URL to web api\r\n\r\n  constructor(private http: HttpClient, private messageService: MessageService) { }\r\n\r\nhttpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\ngetLinks(): Observable<Link[]> {\r\n return this.http.get<Link[]>(this.linksUrl)\r\n .pipe(\r\n    tap(_ => this.log('fetched links')),\r\n      catchError(this.handleError<Link[]>('getLinks', []))\r\n    );\r\n}\r\n\r\n\r\ngetLink(name: string): Observable<Link> {\r\n// For now, assume that a link with the specified `id` always exists.\r\n    // Error handling will be added in the next step of the tutorial.\r\n    const link = LINKS.find(h => h.name === name) as Link;\r\n    this.messageService.add(`LinkService: fetched link name=${name}`);\r\n    return of(link);\r\n}\r\n\r\n\r\nprivate log(message: string) {\r\n  this.messageService.add(`linkService: ${message}`);\r\n}\r\n\r\n\r\n\r\n/**\r\n * Handle Http operation that failed.\r\n * Let the app continue.\r\n * @param operation - name of the operation that failed\r\n * @param result - optional value to return as the observable result\r\n */\r\nprivate handleError<T>(operation = 'operation', result?: T) {\r\n  return (error: any): Observable<T> => {\r\n\r\n    // TODO: send the error to remote logging infrastructure\r\n    console.error(error); // log to console instead\r\n\r\n    // TODO: better job of transforming error for user consumption\r\n    this.log(`${operation} failed: ${error.message}`);\r\n\r\n    // Let the app keep running by returning an empty result.\r\n    return of(result as T);\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* GET links whose name contains search term */\r\nsearchLinks(term: string): Observable<Link[]> {\r\n  if (!term.trim()) {\r\n    // if not search term, return empty link array.\r\n    return of([]);\r\n  }\r\n  return this.http.get<Link[]>(`${this.linksUrl}/?name=${term}`).pipe(\r\n    tap(x => x.length ?\r\n       this.log(`found links matching \"${term}\"`) :\r\n       this.log(`no links matching \"${term}\"`)),\r\n    catchError(this.handleError<Link[]>('searchLinks', []))\r\n  );\r\n}\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { MessageService } from './message.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Link } from './link';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OutputService {\r\n\r\n  httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n  private REST_API_SERVER = \"http://localhost:9999/getall\";\r\n  \r\n  constructor(private http: HttpClient, private messageService: MessageService) { }\r\n\r\n  public getLinks(name: String): Observable<Link[]>{\r\n    return this.http.get<Link[]>(this.REST_API_SERVER+\"/search?name=\"+name,this.httpOptions)\r\n\t.pipe(\r\n    tap(_ => this.log('fetched links')),\r\n      catchError(this.handleError<Link[]>('getLinks', []))\r\n    );\r\n \r\n}\r\n\r\nprivate log(message: string) {\r\n  this.messageService.add(`linkService: ${message}`);\r\n}\r\n\r\n/**\r\n * Handle Http operation that failed.\r\n * Let the app continue.\r\n * @param operation - name of the operation that failed\r\n * @param result - optional value to return as the observable result\r\n */\r\nprivate handleError<T>(operation = 'operation', result?: T) {\r\n  return (error: any): Observable<T> => {\r\n\r\n    // TODO: send the error to remote logging infrastructure\r\n    console.error(error); // log to console instead\r\n\r\n    // TODO: better job of transforming error for user consumption\r\n    this.log(`${operation} failed: ${error.message}`);\r\n\r\n    // Let the app keep running by returning an empty result.\r\n    return of(result as T);\r\n  };\r\n}\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport {InputService} from './input.service';\r\nimport {OutputService} from './output.service';\r\n\r\n//import { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\n//import { InMemoryDataService } from './in-memory-data.service';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { BoardsComponent } from './boards/boards.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RatingsComponent } from './ratings/ratings.component';\r\nimport { LinksComponent } from './links/links.component';\r\nimport { LinkDetailComponent } from './link-detail/link-detail.component';\r\nimport { LinkSearchComponent } from './link-search/link-search.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\nMatCardModule,   \r\n HttpClientModule,\r\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\r\n    // and returns simulated server responses.\r\n    // Remove it when a real server is ready to receive requests.\r\n/*     HttpClientInMemoryWebApiModule.forRoot(\r\n      InMemoryDataService, { dataEncapsulation: false }\r\n    ), */\r\n    BrowserAnimationsModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    MessagesComponent,\r\n    BoardsComponent,\r\n    RatingsComponent,\r\n    LinksComponent,\r\n    LinkDetailComponent,\r\n    LinkSearchComponent,\r\n  ],\r\n  providers: [\r\n  InputService,\r\n  OutputService\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","<div *ngIf=\"link\">\r\n\r\n  <h2>{{link.name | uppercase}} Details</h2>\r\n  <div><span>name: </span>{{link.name}}</div>\r\n  <div>\r\n    <label for=\"link-name\">Link name: </label>\r\n <mat-card-content>\r\n    <img [src] =\"link.imagePath\" \r\n          style=\"width: 600px;height: 400px;\">\r\n  </mat-card-content>\r\n  </div>\r\n\r\n</div>\r\n\r\n<button (click)=\"goBack()\">go back</button>\r\n","import { Component, OnInit,  Input} from '@angular/core';\r\nimport { Link } from '../link';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { LinkService } from '../link.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-link-detail',\r\n  templateUrl: './link-detail.component.html',\r\n  styleUrls: ['./link-detail.component.css']\r\n})\r\nexport class LinkDetailComponent implements OnInit {\r\n\r\n@Input() link?: Link;\r\n\r\n  constructor( private route: ActivatedRoute,\r\n  private linkService: LinkService,\r\n  private location: Location) { }\r\n\r\n  ngOnInit(): void {\r\n  this.getLink();\r\n  }\r\n\r\ngetLink(): void {\r\n  var name = this.route.snapshot.paramMap.get('name');\r\nif (name == null){name = \"0\"} \r\n this.linkService.getLink(name)\r\n    .subscribe(link => this.link = link);\r\n}\r\n\r\n\r\ngoBack(): void {\r\n  this.location.back();\r\n}\r\n\r\n\r\n\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { map, filter, switchMap } from 'rxjs/operators';\r\nimport { Link } from './link';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InputService {\r\n\r\n  private REST_API_SERVER = \"http://localhost:9999/newlink\";\r\n  httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public input(links: Link): Observable<Link> {console.log('input');\r\n   return this.http.post<Link>(this.REST_API_SERVER, links, this.httpOptions)\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport {\r\n   debounceTime, distinctUntilChanged, switchMap\r\n } from 'rxjs/operators';\r\n\r\nimport { Link } from '../link';\r\nimport { LinkService } from '../link.service';\r\n\r\n@Component({\r\n  selector: 'app-link-search',\r\n  templateUrl: './link-search.component.html',\r\n  styleUrls: [ './link-search.component.css' ]\r\n})\r\nexport class LinkSearchComponent implements OnInit {\r\n  links$!: Observable<Link[]>;\r\n  private searchTerms = new Subject<string>();\r\n\r\n  constructor(private linkService: LinkService) {}\r\n\r\n  // Push a search term into the observable stream.\r\n  search(term: string): void {\r\n    this.searchTerms.next(term);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.links$ = this.searchTerms.pipe(\r\n      // wait 300ms after each keystroke before considering the term\r\n      debounceTime(300),\r\n\r\n      // ignore new term if same as previous term\r\n      distinctUntilChanged(),\r\n\r\n      // switch to new search observable each time the term changes\r\n      switchMap((term: string) => this.linkService.searchLinks(term)),\r\n    );\r\n  }\r\n}\r\n","<div id=\"search-component\">\r\n  <label for=\"search-box\">Link Search</label>\r\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\r\n\r\n  <ul class=\"search-result\">\r\n    <li *ngFor=\"let link of links$ | async\" >\r\n      <a routerLink=\"/detail/{{link.name}}\">\r\n        {{link.name}}\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { BoardsComponent } from './boards/boards.component';\r\nimport { RatingsComponent } from './ratings/ratings.component';\r\nimport { LinksComponent } from './links/links.component';\r\nimport { LinkDetailComponent } from './link-detail/link-detail.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n  { path: 'dashboard', component: DashboardComponent },\r\n{ path: 'detail/:name', component: LinkDetailComponent },  \r\n{ path: 'links', component: LinksComponent },  \r\n{path: 'ratings', component: RatingsComponent},\r\n{ path: 'boards', component: BoardsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}